import gleam/dynamic
import gleam/erlang/charlist

pub fn to_string_test() {
  let assert "Hello, from erlang!" =
    "Hello, from erlang!"
    |> charlist.from_string()
    |> charlist.to_string()
}

@external(erlang, "lists", "duplicate")
fn lists_duplicate(n n: Int, elem elem: Int) -> charlist.Charlist

pub fn from_char_list_test() {
  // Test conversion from a char list generated by Erlang
  let assert "ééé" =
    lists_duplicate(3, 0xE9)
    |> charlist.to_string()
}

pub fn empty_string_test() {
  let assert "" =
    []
    |> dynamic.from
    |> dynamic.unsafe_coerce
    |> charlist.to_string

  let assert [] =
    ""
    |> charlist.from_string()
    |> dynamic.from
    |> dynamic.unsafe_coerce
}
